pattern = ".gpf$",
recursive = TRUE
)
name_color <- list.gpf %>%
gsub(".gpf", "", .) %>%
gsub("-", "_", .) %>%
gsub("/", "_", .)
new_color <- function(x) {
data <- read_table(sprintf("%s%s", path, x))
names(data) <- c("id", "r", "g", "b")
newcolor <- data %>%
filter(id != "#") %>%
mutate_if(is.character, as.double) %>%
as.data.frame()
}
data_rgb <- lapply(list.gpf, new_color)
names(data_rgb) <- name_color
rgb_to_hex <- function(color) {
hexcolor <- rgb(color[["r"]], color[["g"]], color[["b"]])
return(hexcolor)
}
data_hex <- lapply(X = data_rgb, FUN = rgb_to_hex)
export_cptcity <- toJSON(data_hex)
write(export_cptcity, "cptcity.js")
library(tidyverse)
library(rjson)
path <- "resources/top-palettes/"
list.gpf <- list.files(
path = path,
pattern = ".gpf$",
recursive = TRUE
)
name_color <- list.gpf %>%
gsub(".gpf", "", .) %>%
gsub("-", "_", .) %>%
gsub("/", "_", .)
new_color <- function(x) {
data <- read_table(sprintf("%s%s", path, x))
names(data) <- c("id", "r", "g", "b")
newcolor <- data %>%
filter(id != "#") %>%
mutate_if(is.character, as.double) %>%
as.data.frame()
}
data_rgb <- lapply(list.gpf, new_color)
names(data_rgb) <- name_color
rgb_to_hex <- function(color) {
hexcolor <- rgb(color[["r"]], color[["g"]], color[["b"]])
return(hexcolor)
}
data_hex <- lapply(X = data_rgb, FUN = rgb_to_hex)
export_cptcity <- toJSON(data_hex)
write(export_cptcity, "cptcity.js")
library(tidyverse)
library(rjson)
path <- "resources/top-palettes/"
list.gpf <- list.files(
path = path,
pattern = ".gpf$",
recursive = TRUE
)
name_color <- list.gpf %>%
gsub(".gpf", "", .) %>%
gsub("-", "_", .) %>%
gsub("/", "_", .)
new_color <- function(x) {
data <- read_table(sprintf("%s%s", path, x))
names(data) <- c("id", "r", "g", "b")
newcolor <- data %>%
filter(id != "#") %>%
mutate_if(is.character, as.double) %>%
as.data.frame()
}
data_rgb <- lapply(list.gpf, new_color)
library(tidyverse)
library(rjson)
path <- "resources/top-palettes/"
list.gpf <- list.files(
path = path,
pattern = ".gpf$",
recursive = TRUE
)
name_color <- list.gpf %>%
gsub(".gpf", "", .) %>%
gsub("-", "_", .) %>%
gsub("/", "_", .)
new_color <- function(x) {
data <- read_table(sprintf("%s%s", path, x))
names(data) <- c("id", "r", "g", "b")
newcolor <- data %>%
filter(id != "#") %>%
mutate_if(is.character, as.double) %>%
as.data.frame()
}
data_rgb <- lapply(list.gpf, new_color)
names(data_rgb) <- name_color
rgb_to_hex <- function(color) {
hexcolor <- rgb(color[["r"]], color[["g"]], color[["b"]])
return(hexcolor)
}
data_hex <- lapply(X = data_rgb, FUN = rgb_to_hex)
export_cptcity <- toJSON(data_hex)
write(export_cptcity, "cptcity.js")
library(tidyverse)
library(rjson)
path <- "resources/top-palettes/"
list.gpf <- list.files(
path = path,
pattern = ".gpf$",
recursive = TRUE
)
name_color <- list.gpf %>%
gsub(".gpf", "", .) %>%
gsub("-", "_", .) %>%
gsub("/", "_", .)
new_color <- function(x) {
data <- read_table(sprintf("%s%s", path, x))
names(data) <- c("id", "r", "g", "b")
newcolor <- data %>%
filter(id != "#") %>%
mutate_if(is.character, as.double) %>%
as.data.frame()
}
data_rgb <- lapply(list.gpf, new_color)
names(data_rgb) <- name_color
rgb_to_hex <- function(color) {
hexcolor <- rgb(color[["r"]], color[["g"]], color[["b"]])
return(hexcolor)
}
data_hex <- lapply(X = data_rgb, FUN = rgb_to_hex)
export_cptcity <- toJSON(data_hex)
write(export_cptcity, "cptcity.js")
library(tidyverse)
library(rjson)
path <- "resources/top-palettes/"
list.gpf <- list.files(
path = path,
pattern = ".gpf$",
recursive = TRUE
)
name_color <- list.gpf %>%
gsub(".gpf", "", .) %>%
gsub("-", "_", .) %>%
gsub("/", "_", .)
new_color <- function(x) {
data <- read_table(sprintf("%s%s", path, x))
names(data) <- c("id", "r", "g", "b")
newcolor <- data %>%
filter(id != "#") %>%
mutate_if(is.character, as.double) %>%
as.data.frame()
}
data_rgb <- lapply(list.gpf, new_color)
names(data_rgb) <- name_color
rgb_to_hex <- function(color) {
hexcolor <- rgb(color[["r"]], color[["g"]], color[["b"]])
return(hexcolor)
}
data_hex <- lapply(X = data_rgb, FUN = rgb_to_hex)
export_cptcity <- toJSON(data_hex)
write(export_cptcity, "cptcity.js")
library(tidyverse)
library(rjson)
path <- "resources/top-palettes/"
list.gpf <- list.files(
path = path,
pattern = ".gpf$",
recursive = TRUE
)
name_color <- list.gpf %>%
gsub(".gpf", "", .) %>%
gsub("-", "_", .) %>%
gsub("/", "_", .)
new_color <- function(x) {
data <- read_table(sprintf("%s%s", path, x))
names(data) <- c("id", "r", "g", "b")
newcolor <- data %>%
filter(id != "#") %>%
mutate_if(is.character, as.double) %>%
as.data.frame()
}
data_rgb <- lapply(list.gpf, new_color)
names(data_rgb) <- name_color
rgb_to_hex <- function(color) {
hexcolor <- rgb(color[["r"]], color[["g"]], color[["b"]])
return(hexcolor)
}
data_hex <- lapply(X = data_rgb, FUN = rgb_to_hex)
export_cptcity <- toJSON(data_hex)
write(export_cptcity, "cptcity.js")
library(tidyverse)
library(rjson)
path <- "resources/top-palettes/"
list.gpf <- list.files(
path = path,
pattern = ".gpf$",
recursive = TRUE
)
name_color <- list.gpf %>%
gsub(".gpf", "", .) %>%
gsub("-", "_", .) %>%
gsub("/", "_", .)
new_color <- function(x) {
data <- read_table(sprintf("%s%s", path, x))
names(data) <- c("id", "r", "g", "b")
newcolor <- data %>%
filter(id != "#") %>%
mutate_if(is.character, as.double) %>%
as.data.frame()
}
data_rgb <- lapply(list.gpf, new_color)
names(data_rgb) <- name_color
names(data_rgb) <- name_color
rgb_to_hex <- function(color) {
hexcolor <- rgb(color[["r"]], color[["g"]], color[["b"]])
return(hexcolor)
}
data_hex <- lapply(X = data_rgb, FUN = rgb_to_hex)
export_cptcity <- toJSON(data_hex)
write(export_cptcity, "cptcity.js")
library(tidyverse)
library(rjson)
path <- "resources/top-palettes/"
list.gpf <- list.files(
path = path,
pattern = ".gpf$",
recursive = TRUE
)
name_color <- list.gpf %>%
gsub(".gpf", "", .) %>%
gsub("-", "_", .) %>%
gsub("/", "_", .)
new_color <- function(x) {
data <- read_table(sprintf("%s%s", path, x))
names(data) <- c("id", "r", "g", "b")
newcolor <- data %>%
filter(id != "#") %>%
mutate_if(is.character, as.double) %>%
as.data.frame()
}
data_rgb <- lapply(list.gpf, new_color)
names(data_rgb) <- name_color
rgb_to_hex <- function(color) {
hexcolor <- rgb(color[["r"]], color[["g"]], color[["b"]])
return(hexcolor)
}
data_hex <- lapply(X = data_rgb, FUN = rgb_to_hex)
export_cptcity <- toJSON(data_hex)
write(export_cptcity, "cptcity.js")
write(export_cptcity, "cptcity.js")
library(tidyverse)
library(rjson)
path <- "resources/top-palettes/"
list.gpf <- list.files(
path = path,
pattern = ".gpf$",
recursive = TRUE
)
name_color <- list.gpf %>%
gsub(".gpf", "", .) %>%
gsub("-", "_", .) %>%
gsub("/", "_", .)
new_color <- function(x) {
data <- read_table(sprintf("%s%s", path, x))
names(data) <- c("id", "r", "g", "b")
newcolor <- data %>%
filter(id != "#") %>%
mutate_if(is.character, as.double) %>%
as.data.frame()
}
data_rgb <- lapply(list.gpf, new_color)
names(data_rgb) <- name_color
rgb_to_hex <- function(color) {
hexcolor <- rgb(color[["r"]], color[["g"]], color[["b"]])
return(hexcolor)
}
data_hex <- lapply(X = data_rgb, FUN = rgb_to_hex)
export_cptcity <- toJSON(data_hex)
write(export_cptcity, "cptcity.js")
library(tidyverse)
library(rjson)
path <- "resources/top-palettes/"
list.gpf <- list.files(
path = path,
pattern = ".gpf$",
recursive = TRUE
)
name_color <- list.gpf %>%
gsub(".gpf", "", .) %>%
gsub("-", "_", .) %>%
gsub("/", "_", .)
new_color <- function(x) {
data <- read_table(sprintf("%s%s", path, x))
names(data) <- c("id", "r", "g", "b")
newcolor <- data %>%
filter(id != "#") %>%
mutate_if(is.character, as.double) %>%
as.data.frame()
}
data_rgb <- lapply(list.gpf, new_color)
names(data_rgb) <- name_color
rgb_to_hex <- function(color) {
hexcolor <- rgb(color[["r"]], color[["g"]], color[["b"]])
return(hexcolor)
}
data_hex <- lapply(X = data_rgb, FUN = rgb_to_hex)
export_cptcity <- toJSON(data_hex)
write(export_cptcity, "cptcity.js")
library(tidyverse)
library(rjson)
path <- "resources/top-palettes/"
list.gpf <- list.files(
path = path,
pattern = ".gpf$",
recursive = TRUE
)
library(tidyverse)
library(rjson)
path <- "resources/top-palettes/"
list.gpf <- list.files(
path = path,
pattern = ".gpf$",
recursive = TRUE
)
name_color <- list.gpf %>%
gsub(".gpf", "", .) %>%
gsub("-", "_", .) %>%
gsub("/", "_", .)
new_color <- function(x) {
data <- read_table(sprintf("%s%s", path, x))
names(data) <- c("id", "r", "g", "b")
newcolor <- data %>%
filter(id != "#") %>%
mutate_if(is.character, as.double) %>%
as.data.frame()
}
data_rgb <- lapply(list.gpf, new_color)
names(data_rgb) <- name_color
library(tidyverse)
library(rjson)
path <- "resources/top-palettes/"
list.gpf <- list.files(
path = path,
pattern = ".gpf$",
recursive = TRUE
)
name_color <- list.gpf %>%
gsub(".gpf", "", .) %>%
gsub("-", "_", .) %>%
gsub("/", "_", .)
new_color <- function(x) {
data <- read_table(sprintf("%s%s", path, x))
names(data) <- c("id", "r", "g", "b")
newcolor <- data %>%
filter(id != "#") %>%
mutate_if(is.character, as.double) %>%
as.data.frame()
}
data_rgb <- lapply(list.gpf, new_color)
names(data_rgb) <- name_color
rgb_to_hex <- function(color) {
hexcolor <- rgb(color[["r"]], color[["g"]], color[["b"]])
return(hexcolor)
}
data_hex <- lapply(X = data_rgb, FUN = rgb_to_hex)
export_cptcity <- toJSON(data_hex)
write(export_cptcity, "cptcity.js")
library(tidyverse)
library(rjson)
path <- "resources/top-palettes/"
list.gpf <- list.files(
path = path,
pattern = ".gpf$",
recursive = TRUE
)
library(tidyverse)
library(rjson)
path <- "resources/top-palettes/"
list.gpf <- list.files(
path = path,
pattern = ".gpf$",
recursive = TRUE
)
name_color <- list.gpf %>%
gsub(".gpf", "", .) %>%
gsub("-", "_", .) %>%
gsub("/", "_", .)
new_color <- function(x) {
data <- read_table(sprintf("%s%s", path, x))
names(data) <- c("id", "r", "g", "b")
newcolor <- data %>%
filter(id != "#") %>%
mutate_if(is.character, as.double) %>%
as.data.frame()
}
data_rgb <- lapply(list.gpf, new_color)
library(tidyverse)
library(rjson)
path <- "resources/top-palettes/"
list.gpf <- list.files(
path = path,
pattern = ".gpf$",
recursive = TRUE
)
name_color <- list.gpf %>%
gsub(".gpf", "", .) %>%
gsub("-", "_", .) %>%
gsub("/", "_", .)
new_color <- function(x) {
data <- read_table(sprintf("%s%s", path, x))
names(data) <- c("id", "r", "g", "b")
newcolor <- data %>%
filter(id != "#") %>%
mutate_if(is.character, as.double) %>%
as.data.frame()
}
data_rgb <- lapply(list.gpf, new_color)
names(data_rgb) <- name_color
rgb_to_hex <- function(color) {
hexcolor <- rgb(color[["r"]], color[["g"]], color[["b"]])
return(hexcolor)
}
data_hex <- lapply(X = data_rgb, FUN = rgb_to_hex)
export_cptcity <- toJSON(data_hex)
write(export_cptcity, "cptcity.js")
write(export_cptcity, "cptcity.js")
library(tidyverse)
library(rjson)
path <- "resources/top-palettes/"
list.gpf <- list.files(
path = path,
pattern = ".gpf$",
recursive = TRUE
)
name_color <- list.gpf %>%
gsub(".gpf", "", .) %>%
gsub("-", "_", .) %>%
gsub("/", "_", .)
new_color <- function(x) {
data <- read_table(sprintf("%s%s", path, x))
names(data) <- c("id", "r", "g", "b")
newcolor <- data %>%
filter(id != "#") %>%
mutate_if(is.character, as.double) %>%
as.data.frame()
}
data_rgb <- lapply(list.gpf, new_color)
names(data_rgb) <- name_color
rgb_to_hex <- function(color) {
hexcolor <- rgb(color[["r"]], color[["g"]], color[["b"]])
return(hexcolor)
}
data_hex <- lapply(X = data_rgb, FUN = rgb_to_hex)
export_cptcity <- toJSON(data_hex)
write(export_cptcity, "cptcity.js")
library(tidyverse)
library(rjson)
path <- "basedata/"
list.csv <- list.files(
path = path,
pattern = ".csv$",
recursive = TRUE
) %>%
sprintf("%s%s",path,.)
library(tidyverse)
library(rjson)
path <- "resources/others/"
list.csv <- list.files(
path = path,
pattern = ".csv$",
recursive = TRUE
) %>%
sprintf("%s%s",path,.)
name_color <- list.csv %>%
gsub(".csv", "", .) %>%
gsub("basedata/newcolors/", "", .)
data_rgb <- lapply(list.csv,read_csv)
names(data_rgb) <- name_color
data_rgb
rgb_to_hex <- function(color) {
hexcolor <- rgb(color[["R"]], color[["G"]], color[["B"]])
return(hexcolor)
}
data_hex <- lapply(X = data_rgb, FUN = rgb_to_hex)
export_cptcity <- toJSON(data_hex)
write(export_cptcity, "ee-newcolors.js")
write(export_cptcity, "ee-newcolors.json")
library(tidyverse)
library(rjson)
path <- "resources/top-palettes/"
list.gpf <- list.files(
path = path,
pattern = ".gpf$",
recursive = TRUE
)
name_color <- list.gpf %>%
gsub(".gpf", "", .) %>%
gsub("-", "_", .) %>%
gsub("/", "_", .)
name_color
name_color
path <- "resources/top-palettes/"
list.gpf <- list.files(
path = path,
pattern = ".gpf$",
recursive = TRUE
)
name_color <- list.gpf %>%
gsub(".gpf", "", .) %>%
gsub("-", "_", .) %>%
gsub("/", "_", .)
name_color
